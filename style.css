/*================ Geral =================== */

/* rem é relativo referente a algum padrão pré-estabelecido no navegador */
/*root é a raiz dos estilos */

/* seletor universal - '*' */
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

:root {
  /* uso de variáveis no CSS, permitindo mudar em um lugar só, e , mudar tambem em todos que o referenciam */
  --hue: 170;

  --primary-color: hsl(var(--hue), 100%, 26%);
  --headline: hsl(210, 9%, 31%);
  --paragraph: hsl(210, 9%, 31%);
  --hero: hsl(calc(var(--hue) - 22), 23%, 89%);
  --brand-beige: hsl(39, 100%, 97%);
  --services: hsl(calc(var(--hue) + 10), 14%, 97%);
  --green-hover: hsl(var(--hue), 100%, 14%);

  font-size: 62.5%;
  /* 1rem = 10px (regra de três) */

  --nav-height: 7.2rem;
}

html {
  scroll-behavior: smooth;
}

html,
body {
  width: 100%;
  height: 100%;
}

body {
  font-family: 'DM Sans';
  font-size: 1.6rem;
  /* 16px */
  text-align: center;

  overflow: overlay;

  background-color: var(--services);
}

.wrapper {
  width: min(50rem, 100%);
  /* busque o menor valor - se o menor valor estiver ocupando 100% da caixa, mantenha; se 50rem for esse valor, fique aí */

  margin-inline: auto;
  /*
  margin-left: auto;
  margin-right: auto; */

  padding-inline: 2.4rem;
  /*
  padding-left: 2rem;
  padding-right: 2rem; */
}

ul {
  list-style: none;
}

img {
  max-width: 100%;
}

section {
  padding-block: 10rem;
}

section header h1 {
  font-size: 3.4rem;
  color: var(--headline);
  line-height: 130%;
  /* or 44px */

  margin-bottom: 2.4rem;
}

section header h4 {
  font-size: 1.4rem;
  /* 14px */
  font-weight: 700;
  color: var(--primary-color);
  line-height: 150%;
  /* identical to box height, or 21px */
  letter-spacing: 0.08rem;

  margin-bottom: 1.6rem;

  text-transform: uppercase;
}

section header h2 {
  color: var(--headline);
  font-weight: 700;
  font-size: 3rem;
  line-height: 3.9rem;
}

section .contents p {
  color: var(--paragraph);
  font-weight: 400;
  font-size: 1.6rem;
  line-height: 150%;
  /* or 24px */
}

.button {
  background-color: var(--primary-color);

  transition: background 200ms;
  /* 0.2s */

  border: none;
  border-radius: 4rem;

  margin-bottom: 6rem;
  /*reconfigurando o alinhamento da caixa botão, perdido com o display flex*/

  padding: 1.6rem 3.2rem;
  width: fit-content;

  /*width: 26.3rem;
  height: 5.2rem;
  retira-se a largura e altura fixas e coloca-se o tamanho do botão baseado no conteúdo */

  color: hsl(0, 0%, 100%);
  font-size: 1.4rem;
  font-weight: 700;
  text-transform: uppercase;
  text-decoration: none;
  line-height: 1.8rem;

  /* mexendo com o display interno do botão e com seus itens */
  display: flex;
  /* 'display: flex' interno faz com que ele se entenda como 'block' por fora, alcançanc toda a largura máxima do documento */
  align-items: center; /*height*/
  justify-content: center; /* width*/
  gap: 1.6rem; /*espaço entre elementos*/
}

.button:hover {
  background-color: var(--green-hover);
}

.social-links {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 3.2rem;
}

/* custom colors */

#services .card circle {
  fill: var(--hero);
}

/* 'selector[content]' - seletor que contenha algo */
#navigation .logo path[fill*='#00856F'],
#backToTopButton circle {
  fill: var(--primary-color);
}

button.open-menu path[stroke*='#00856F'],
#contact li path {
  stroke: var(--primary-color);
}

body.menu-expanded #navigation .logo path,
#navigation.scroll .logo path {
  fill: white;
}

#navigation.scroll button.open-menu path[stroke*='#00856F'] {
  stroke: white;
}

/* ====================== NAVIGATION =============================*/

nav {
  display: flex;

  width: 100vw;
  height: var(--nav-height);
  /* 
  padding: 1.6rem 2.4rem;

  padding-inline: 2.4rem;
  padding-block: 1.6rem; */

  position: fixed;
  top: 0;
  /* não preciso alinhar ao centro desta forma
  left: 50%;
  transform: translateX(-50%);
    */
  z-index: 100;
}

nav .wrapper {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

nav.scroll {
  background-color: var(--primary-color);

  color: #fff;
  /* as declarações aqui são as mesmas do 'nav' sem o scroll
  position: fixed;
  top: 0; */
}

nav button {
  background: none;
  border: none;
  cursor: pointer;
}

nav .menu,
nav .close-menu {
  position: fixed;
}

nav .open-menu,
nav .close-menu {
  -webkit-tap-highlight-color: transparent;
}

/* ====================== MENU-EXPANDED =============================*/

body.menu-expanded {
  overflow: hidden;
  /* ignora os elementos atrás, na lateral, e pra baixo */
}

body.menu-expanded > :not(nav) {
  /* pseudo class '> *' significa 'todos do primeiro nível' */
  /* pseudo class '> :not()' exclui algo das decalarções feitas abaixo */
  visibility: hidden;
}

.menu,
.close-menu,
body.menu-expanded .open-menu {
  opacity: 0;
  visibility: hidden;
}

body.menu-expanded .menu,
body.menu-expanded .close-menu {
  opacity: 1;
  visibility: visible;
}

.menu {
  transform: translateY(-100%);
}

body.menu-expanded .menu {
  top: 0;
  left: 0;
  background-color: var(--primary-color);

  width: 100vw;
  height: 100vh;

  padding-top: var(--nav-height);

  transition: transform 300ms;

  transform: translateY(0);
}

/* agora, esta 'position' esta eliminando o z-index, então, não precisa mais
body.menu-expanded nav {
  position: relative;
} */

.menu ul:nth-child(1) {
  margin-top: 6rem;

  font-size: 2.4rem;
  font-weight: 700;
  line-height: 3.1rem;

  display: flex;
  flex-direction: column;
  gap: 4.8rem;
}

.menu ul li a {
  /* por ser uma lista de links, deve-se chegar diretamente ao link */
  color: white;
  text-decoration: none;
}

.menu .button {
  /* tudo aqui nesta classe é aplicado direto no elemento 'a'  */
  background-color: white;

  border: none;
  border-radius: 4rem;

  margin-top: 4.8rem;
  margin-bottom: 8rem;
  /*reconfigurando o alinhamento da caixa botão, perdido com o display flex */

  color: var(--primary-color);
  font-size: 1.8rem;
  font-weight: 700;
  text-transform: uppercase;
  text-decoration: none;
  line-height: 2.3rem;

  /* mexendo com o display interno do botão e com seus itens */
  display: inline-block;
  padding: 16px 32px;
}

.menu .button:hover {
  background-color: var(--primary-color);

  color: white;

  filter: brightness(1.3);
  /* ativa um monte de configurações de aparência */
}

body.menu-expanded .logo,
body.menu-expanded button {
  position: relative;
  /* desbloqueia algumas coisas como a posição no plano z */
  z-index: 100;
  /* agora destravado, trás a logo pra cima do menu, dentro do nav */
}

/* acertando a cor branca da logo que ficava branca onScroll */
body.menu-expanded .logo path {
  fill: white;
}

body.menu-expanded button path {
  stroke: white;
}

/* ====================== #HOME =============================*/

#home {
  padding-block: 0;
  padding-top: calc(4.1rem + var(--nav-height));
  /* aceita calculo no CSS */
  /* padding-top coloca o começo do 'header' do body até a altura do 'nav' */
}

/* Criando um pseudo element no HTML -> equivalente a minha class 'Hero' */

/* before - tudo que vem antes do conteúdo da tag */

#home::before {
  content: '';
  width: 100%;
  height: calc(76% + var(--nav-height));
  /* deixando a altura fleível de acordo com o percentual e não com um valor fixo */
  background-color: var(--hero);

  display: block;
  /* 'absolute' sobrepõe o elemento criado. Função habilitada com o display block */
  position: absolute;
  top: 0;
  left: 0;
  /* 'z-index' - joga o conteúdo criado pra trás de tudo que já foi feito em header */
  z-index: -1;
}

#home p {
  font-size: 1.8rem;
  line-height: 150%;
  /* or 27px */
  font-weight: 400;
  color: var(--paragraph);

  margin-bottom: 3.2rem;
}

#home .button {
  margin-inline: auto;
}

#home img {
  width: 26.4rem;

  display: block;

  margin-inline: auto;

  object-position: 0 2rem;
}

/* ====================== FLOAT - STATS =============================*/

#home .stats {
  background-color: var(--brand-beige);

  border: 1px solid var(--hero);
  border-radius: 0.6rem;

  width: 100%;

  display: flex;
  /* display flex vai alinhar o conteúdo lado a lado */
  flex-direction: column;
  /* flex direction vai alinhar o posicionamento desse conteúdo */
  /* align-items: center; */
  justify-content: center;
  gap: 6rem;

  padding-block: 4rem;
  /* 'block' atribui valor desejado acima e abaixo 
  padding-top: 4rem; 
  padding-bottom: 4rem; */

  margin-inline: auto;
  /* 'inline' atribui valor desejado as laterais
  margin-left: auto;
  margin-right: auto; */
}

#home .stat h3 {
  font-size: 4.8rem;
  line-height: 130%;
  font-weight: 700;
  color: var(--headline);

  margin-bottom: 0.4rem;
}

#home .stat p {
  line-height: 150%;
  font-weight: 400;
  color: var(--primary-color);

  margin: 0;
}

/* ====================== CARDS - SERVICES =============================*/

#services header h2 {
  margin-bottom: 6rem;
}

#services .cards {
  display: flex;
  flex-direction: column;
  gap: 3.2rem;
}

#services .card {
  padding: 2.4rem;
  text-align: left;

  background-color: #ffffff;
  border: 1px solid var(--hero);
  border-radius: 0.6rem;
}

#services .card h3 {
  margin-block: 1.6rem;
}

/* ====================== ABOUT =============================*/

#about {
  text-align: left;
  background-color: var(--brand-beige);
}

#about header h2 {
  margin-bottom: 6rem;
}

#about .contents p {
  margin-top: 2.4rem;
  margin-bottom: 6rem;
}

/* ====================== CONTACT =============================*/

#contact {
  text-align: left;
}

#contact header {
  margin-bottom: 3.2rem;
}

#contact ul {
  display: flex;
  flex-direction: column;
  gap: 1.6rem;

  margin-bottom: 3.2rem;
}

#contact ul li {
  display: flex;
  align-items: center;
  gap: 0.8rem;
}

/* ====================== FOOTER =============================*/

footer {
  background-color: var(--primary-color);
  padding-block: 6rem;

  color: white;
  text-align: left;
}

footer .logo {
  /* tag '<a>' tem 'DISPLAY: INLINE' e esse display NÃO ACEITA 'margin (top/ bottom), NÃO ACEITA 'width' e NÃO ACEITA ' height' */

  margin-bottom: 2.4rem;

  display: inline-block;
}

footer .logo svg {
  width: 23.6rem;
  height: 3.1rem;
}

footer .logo path {
  fill: white;
}

footer p {
  margin-bottom: 3.2rem;

  color: var(--brand-beige);
  font-size: 1.6rem;
  line-height: 2.1;
  /* aqui em '<p>' não usa o rem e seria o equivalente ao 'double/ 2' no Word */
}

footer .social-links {
  justify-content: flex-start;
}

/* ====================== BACK TO TOP BUTTON =============================*/

#backToTopButton {
  position: fixed;
  /* libera as propriedades usadas abaixo */

  bottom: 1rem;
  right: 2.8rem;

  opacity: 0;
  visibility: hidden;

  transform: translateY(100%);
  transition: 200ms;
}

#backToTopButton.show {
  opacity: 1;
  visibility: visible;

  transform: translateY(0);
}

/* ====================== RESPONSIVO =============================*/

/* Propriedade do CSS - PONTO De QUEBRA que define estilos para uma mídia/ tamanho específico (no caso aqui, lap-top) */
@media (min-width: 1024px) {
  /* Vai mexer nos dispositivos de tamanho maior ao estipulado */

  /* ====================== GERAL =============================*/

  body {
    overflow: auto;
  }

  .wrapper {
    width: min(112rem, 100%);
    display: grid;
  }

  .col-a {
    grid-area: A;
  }

  .col-b {
    grid-area: B;
  }

  section {
    padding-block: 16rem;
  }

  section header h2 {
    font-size: 4rem;
    line-height: 5.2rem;
  }

  #backToTopButton.show {
    opacity: 1;
    visibility: visible;
  
    transform: translateY(0);
  }

  /* ====================== NAVIGATION =============================*/

  /* reset */
  nav#navigation .wrapper * {
    margin: 0;
    padding: 0;
    opacity: initial;
    visibility: initial;
    display: initial;
    flex-direction: initial;
    position: initial;
    font-size: initial;
    font-weight: initial;
    transform: initial;
    color: initial;
    background-color: initial;
    filter: initial;
  }

  nav#navigation .close-menu,
  nav#navigation .open-menu,
  nav#navigation .social-links {
    display: none;
  }

  nav#navigation .menu {
    display: flex;
    align-items: center;
    justify-content: space-between;
    width: 60%;
  }

  nav#navigation .menu ul:nth-child(1) {
    display: flex;
    gap: 3.2rem;
  }

  nav#navigation .menu ul li a {
    color: var(--primary-color);
    line-height: 2.1rem;
    /* identical to box height */

    opacity: 0.7;
  }

  nav#navigation .menu a.button {
    display: flex;
    justify-content: center;
    align-items: center;
    padding: 1rem 2.4rem;

    color: var(--primary-color);
    font-weight: 700;
    font-size: 1.4rem;
    text-transform: uppercase;
    line-height: 1.8rem;

    border: 1px solid var(--primary-color);
    border-radius: 4rem;
  }

  nav#navigation .menu a.button:hover {
    background-color: var(--primary-color);
    border: none;
    color: white;
  }

  nav#navigation.scroll .menu ul li a {
    color: var(--services);

    opacity: 0.6;
  }

  nav#navigation.scroll .menu a.button {
    border-color: white;

    color: white;
  }

  nav#navigation .menu li a {
    transition: opacity 0.4s;
  }
  nav#navigation .menu li a.active,
  nav#navigation .menu li a:hover {
    font-weight: 700;

    opacity: 1;
  }

  /* criando novo conteúdo através do CSS, dessa vez usandono 'after' */
  nav#navigation .menu li a::after {
    content: '';
    /* ao criar conteúdo pelo CSS precisa ser acrescido o "content: ''" */
    background-color: var(--primary-color);

    width: 0%;
    height: 0.2rem;

    display: block;

    position: relative;
    left: -0.7rem;
    bottom: -1.95rem;

    transition: width 0.2s;
  }

  nav#navigation.scroll .menu li a::after {
    background-color: white;
  }

  nav#navigation .menu li a.active::after,
  nav#navigation .menu li a:hover::after {
    width: 100%;

    padding-inline: 0.8rem;
  }

  nav#navigation.scroll .menu li a.active,
  nav#navigation.scroll .menu li a:hover {
    opacity: 1;
  }

  nav#navigation.scroll .menu a.button.active,
  nav#navigation.scroll .menu a.button:hover {
    background-color: var(--primary-color);
    filter: brightness(1.3);
    border: none;
  }

  /* ====================== HOME =============================*/

  #home {
    padding-top: var(--nav-height);
  }

  #home::before {
    height: calc(96% - var(--nav-height));
    /* calculo feito usando o dev tools para acertar o percentual a ser subtraído */
  }

  #home .wrapper {
    grid-template-columns: 60.5rem 1fr;
    grid-template-areas:
      'A B'
      'C C';
  }

  #home .col-a {
    text-align: left;
    align-self: center;
  }

  #home h1 {
    font-size: 5.2rem;
  }

  #home .contents p {
    font-size: 1.8rem;
  }

  #home .button {
    margin: 0;
  }

  #home img {
    width: 42rem;
  }

  #home .stats {
    grid-area: C;

    flex-direction: row;
    padding: 6rem;

    gap: 0;
  }

  #home .stats .stat + .stat {
    /* procurar em 'stats' um 'stat' que tenha um 'stat' anterior */
    border-left: 1px solid var(--primary-color);
  }

  #home .stats .stat {
    flex: 1;
    /* como 'stats' está como  'flex', seu conteúdo 'stat' pode receber a denominação de uma unidade para cada */
  }

  /* ====================== SERVICES =============================*/

  #services h2 {
    width: 47rem;
    margin-inline: auto;
  }

  #services .cards {
    flex-direction: row;
    flex-wrap: wrap;
    /* organize o conteúdo como linha e respeite seus espaços/ tamanho */

    gap: 4rem;
  }

  #services .card {
    width: 30%;
    flex-grow: 1;
    /* cresça e preencha o espaço restante */
  }

  /* ====================== ABOUT =============================*/

  #about .wrapper {
    grid-template-columns: 48rem 1fr;
    grid-template-areas: 'B A';

    gap: 6.7rem;
  }

  #about .col-a {
    align-self: center;
  }

  #about .contents p {
    margin-bottom: 0;
  }

  /* ====================== ABOUT =============================*/

  #contact .wrapper {
    grid-template-columns: 1fr 57.5rem;
    grid-template-areas: 'A B';
  }

  #contact h2 {
    width: 40.4rem;
  }

  /* ====================== FOOTER =============================*/

  footer {
    padding-block: 8rem;
  }

  footer .wrapper {
    grid-template-columns: 1fr 1fr;
    grid-template-areas: 'A B';
  }

  footer .col-a {
    align-self: center;
  }

  footer .col-b {
    align-self: center;
    justify-self: flex-end;
  }

  footer p {
    margin-bottom: 0;
  }
}
